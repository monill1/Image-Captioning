# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jnZ-QLIq-hAKjVs1o2yh-u97muzFPYzQ
"""

!pip install transformers

!pip install gradio

import gradio as gr
from transformers import VisionEncoderDecoderModel, ViTImageProcessor, AutoTokenizer
import torch

# Load the pre-trained model and necessary components
model = VisionEncoderDecoderModel.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
feature_extractor = ViTImageProcessor.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
tokenizer = AutoTokenizer.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
model.to(device)

# Define a function to predict captions for images
max_length = 16
num_beams = 4
gen_kwargs = {"max_length": max_length, "num_beams": num_beams}

import requests
from io import BytesIO

def predict_step(image_urls):
  images = []
  for url in image_urls:
    response = requests.get(url)
    i_image = Image.open(BytesIO(response.content))
    if i_image.mode != "RGB":
      i_image = i_image.convert(mode="RGB")

    images.append(i_image)

  pixel_values = feature_extractor(images=images, return_tensors="pt").pixel_values
  pixel_values = pixel_values.to(device)

  output_ids = model.generate(pixel_values, **gen_kwargs)

  preds = tokenizer.batch_decode(output_ids, skip_special_tokens=True)
  preds = [pred.strip() for pred in preds]
  return preds

# Define a function to generate captions for a given image
def generate_caption(image):
    # Preprocess the image
    inputs = feature_extractor(images=image, return_tensors="pt").to(device)

    # Generate captions
    caption_ids = model.generate(**inputs, **gen_kwargs)[0]
    caption = tokenizer.decode(caption_ids, skip_special_tokens=True)

    return caption

# Create a Gradio interface for the model
image_input = gr.inputs.Image()
caption_output = gr.outputs.Textbox()

gr.Interface(
    fn=generate_caption,
    inputs=image_input,
    outputs=caption_output,
    title="Image Captioning Model",
    description="Upload an image to generate a caption",
).launch()

